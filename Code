#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdlib>

using namespace std;

void head() {
    cout << "***********************************************\n";
    cout << "*\t\t    Group of Hotels\t\t      *\n";
    cout << "***********************************************\n";
}

void time_delay() {
    cout << "\tConnecting to Server\n \tSyncing Data";
    for (int i = 0; i < 10; i++) {
        for (long long j = 0; j < 9999999; j++); 
        cout << ".";
    }
    cout << endl;
}



class hotel {
private:
    int room_no;
    char name[30];
    char address[50];
    char phone[15];
    int days;
    float fare;

public:
    void main_menu();        // to display the main menu
    void add();              // to book a room
    void display();          // to display the customer record
    void rooms();            // to display allotted rooms
    void edit();             // to edit the customer record
    int check(int);          // to check room status
    void modify(int);        // to modify the record
    void delete_rec(int);    // to delete the record
};

void hotel::main_menu() {
    int choice = 0;
    while (choice != 5) {
        system("cls");  
        head();
        cout << "\n\t* MAIN MENU *";
        cout << "\n\n\t1. Book A Room";
        cout << "\n\t2. Customer Record";
        cout << "\n\t3. Rooms Allotted";
        cout << "\n\t4. Edit Record";
        cout << "\n\t5. Exit";
        cout << "\n\n\t Enter Your Choice: ";
        cin >> choice;
        switch (choice) {
            case 1: add(); break;
            case 2: display(); break;
            case 3: rooms(); break;
            case 4: edit(); break;
            case 5: break;
            default:
                cout << "\n\n\t\t\tWrong choice.....!!!";
                cout << "\n\t\t\tPress any key to continue....!!";
                cin.ignore().get();  
        }
    }
}

void hotel::add() {
    system("cls");
    head();
    int r, flag;
    ofstream fout("Record.dat", ios::app | ios::binary);
    cout << "\n Enter Customer Details";
    cout << "\n ----------------------";
    cout << "\n\n Room no: ";
    cin >> r;
    flag = check(r);
    if (flag) {
        cout << "\n Sorry..!!! Room is already booked";
    } else {
        room_no = r;
        cout << " Name: ";
        cin.ignore();
        cin.getline(name, 30);
        cout << " Address: ";
        cin.getline(address, 50);
        cout << " Phone No: ";
        cin.getline(phone, 15);
        cout << " No of Days to Checkout: ";
        cin >> days;
        fare = days * 500;  
        fout.write(reinterpret_cast<char*>(this), sizeof(hotel));
        cout << "\n Room is booked...!!!";
    }

    cout << "\n Press any key to continue.....!!";
    cin.ignore().get();  
    fout.close();
}

void hotel::display() {
    system("cls");
    head();
    ifstream fin("Record.dat", ios::in | ios::binary);
    int r, flag = 0;
    cout << "\n Enter room no: ";
    cin >> r;
    while (fin.read(reinterpret_cast<char*>(this), sizeof(hotel))) {
        if (room_no == r) {
            system("cls");
            head();
            cout << "\n Customer Details";
            cout << "\n ----------------";
            cout << "\n\n Room no: " << room_no;
            cout << "\n Name: " << name;
            cout << "\n Address: " << address;
            cout << "\n Phone no: " << phone;
            cout << "\n Days: " << days;
            cout << "\n Total Fare: " << fare;
            flag = 1;
            break;
        }
    }
    if (flag == 0)
        cout << "\n Sorry Room no. not found or vacant....!!";
    cout << "\n\n Press any key to continue....!!";
    cin.ignore().get(); 
    fin.close();
}

void hotel::rooms() {
    system("cls");
    head();
    ifstream fin("Record.dat", ios::in | ios::binary);
    cout << "\n\t\t\t    List Of Rooms Allotted";
    cout << "\n\t\t\t    ----------------------";
    while (fin.read(reinterpret_cast<char*>(this), sizeof(hotel))) {
        cout << "\n Room no: " << room_no
             << "\n Name: " << name
             << "\n Address: " << address
             << "\n Phone: " << phone
             << "\n Days: " << days
             << "\n Total: " << fare
             << "\n-----------------------------";
    }
    cout << "\n\n\n\t\t\tPress any key to continue.....!!";
    cin.ignore().get();  
    fin.close();
}

void hotel::edit() {
    system("cls");
    head();
    int choice, r;
    cout << "\n EDIT MENU";
    cout << "\n ---------";
    cout << "\n\n 1. Modify Customer Record";
    cout << "\n 2. Delete Customer Record";
    cout << "\n Enter your choice: ";
    cin >> choice;

    cout << "\n Enter room no: ";
    cin >> r;
    switch (choice) {
        case 1: modify(r); break;
        case 2: delete_rec(r); break;
        default: cout << "\n Wrong Choice.....!!";
    }
    cout << "\n Press any key to continue....!!!";
    cin.ignore().get();  
}

int hotel::check(int r) {
    int flag = 0;
    ifstream fin("Record.dat", ios::in | ios::binary);
    while (fin.read(reinterpret_cast<char*>(this), sizeof(hotel))) {
        if (room_no == r) {
            flag = 1;
            break;
        }
    }
    fin.close();
    return flag;
}

void hotel::modify(int r) {
    system("cls");
    head();
    long pos;
    int flag = 0;
    fstream file("Record.dat", ios::in | ios::out | ios::binary);
    while (file.read(reinterpret_cast<char*>(this), sizeof(hotel))) {
        pos = file.tellg();
        if (room_no == r) {
            cout << "\n Enter New Details";
            cout << "\n -----------------";
            cout << "\n Name: ";
            cin.ignore();
            cin.getline(name, 30);
            cout << " Address: ";
            cin.getline(address, 50);
            cout << " Phone no: ";
            cin.getline(phone, 15);
            cout << " Days: ";
            cin >> days;
            fare = days * 900;
            file.seekg(pos - sizeof(hotel));
            file.write(reinterpret_cast<char*>(this), sizeof(hotel));
            cout << "\n Record is modified....!!";
            flag = 1;
            break;
        }
    }
    if (flag == 0)
        cout << "\n Sorry Room no. not found or vacant...!!";
    file.close();
}





void hotel::delete_rec(int r) {
    system("cls");  
    head();
    int flag = 0;
    char ch;
    ifstream fin("Record.dat", ios::in | ios::binary);
    ofstream fout("temp.dat", ios::out | ios::binary);

    while (fin.read(reinterpret_cast<char*>(this), sizeof(hotel))) {
        if (room_no == r) {
            cout << "\n Name: " << name;
            cout << "\n Address: " << address;
            cout << "\n Phone No: " << phone;
            cout << "\n Days: " << days;
            cout << "\n Total Fare: " << fare;
            cout << "\n\n Do you want to delete this record(y/n): ";
            cin >> ch;
            if (ch == 'n')
                fout.write(reinterpret_cast<char*>(this), sizeof(hotel));
            flag = 1;
        } else {
            fout.write(reinterpret_cast<char*>(this), sizeof(hotel));
        }
    }

    fin.close();
    fout.close();
    
    if (flag == 0) {
        cout << "\n Sorry, room no. not found or vacant...!!";
    } else {
        remove("Record.dat");
        rename("temp.dat", "Record.dat");
        cout << "\n Record Deleted Successfully...!!";
    }

    cout << "\n Press any key to continue.....!!";
    cin.ignore().get();  
}



int main() {
    system("cls"); 
    hotel h;
    
    cout << "\n\n\n";
    time_delay();
    cout << "\n\n\nPress any key to continue....!!";
    cin.get(); 
    
    system("cls");
    head();

    char id[10], pass[10];
    cout << "\n\n\t\t\t\tUsername => ";
    cin >> id;
    cout << "\n\t\t\t\tPassword => ";
    cin >> pass;
    
    if (strcmp(id, "admin") == 0 && strcmp(pass, "admin") == 0) {  
        cout << "\n\n\t\t\t  !!!Login Successful!!!";
    } else {
        cout << "\n\n\t\t\t!!!INVALID CREDENTIALS!!!";
        cin.ignore().get();  
        exit(-1);
    }

    cin.ignore();
    h.main_menu();  

    return 0;
}
